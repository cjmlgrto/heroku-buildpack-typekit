#!/usr/bin/env python

import sys;
import os;

##
# NB: Need to load the lib path to import custom modules.
##
sys.path.append(
    os.path.join(
        os.path.dirname(__file__), '..', 'lib'
    )
);

import output;
import env;

from typekit import Typekit;
from heroku import Heroku;

try:

    env.load(
        sys.argv[3],
        [
            'TYPEKIT_KIT_ID',
            'TYPEKIT_API_KEY',
            'HEROKU_APP_NAME'
        ]
    );

    typeKitId = os.environ['TYPEKIT_KIT_ID'];
    typeKitApiKey = os.environ['TYPEKIT_API_KEY'];
    herokuAppName = os.environ['HEROKU_APP_NAME'];

    if not typeKitId or not typeKitApiKey or not herokuAppName:
        raise ValueError('One of more of the required variables are empty.');

    typekit = Typekit(typeKitId, typeKitApiKey);
    heroku = Heroku(herokuAppName);

    kit = typekit.kit();

    if not kit:
        raise RuntimeError('Unable to retrieve kit.');

    herokuAppUrl = heroku.url();
    typeKitDomains = kit['domains'];

    if herokuAppUrl in typeKitDomains:
        pass
    else:
        typeKitDomains.append(herokuAppUrl);

        if not typekit.add(typeKitDomains):
            raise RuntimeError('Unable to add domain "' + herokuAppUrl + '" to kit.');

        typekit.publish();

        # print output.line('The domain "' + herokuAppUrl + '" has been added to your Typekit account.');
        # print output.line('Your new kit may take a few minutes to be completely distributed across the Typekit network.');

except RuntimeError as e:

    # print output.line('Unable to process the kit with the ID "' + typeKitId + '".');
    # print output.line('Please double check your Kit ID and API Key.');
    # print output.line('Internal error: "' + str(e) + '"');

except:

    # print output.line('Please see the following URL for setup configuration settings:');
    # print output.line('https://github.com/jedkirby/heroku-buildpack-typekit');
